name: Publish

on:
  repository_dispatch:
    types: [publish_docker_images]

jobs:
  publish_docker_images:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Checkout Submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Remove Modules
      shell: bash
      run: rm -rf modules
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: install Packages
      env:
        NODE_ENV: development
      run: |
        yarn submodule-sync
        yarn
    - name: Build Packages
      env:
        NODE_ENV: production
      run: yarn workspaces run build
    - name: Publish GraphQL API to Registry
      uses: docker/build-push-action@v1
      env:
        NODE_ENV: production
      with:
        repository: michaeltobia/chelsea-graphql-api
        path: packages/api
        dockerfile: packages/api/Dockerfile
        build_args: join(["NODE_ENV"], ',')
        tags: latest
        tag_with_ref: true
        tag_with_sha: true
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish One App to Registry
      uses: docker/build-push-action@v1
      env:
        NODE_ENV: production
        ONE_CONFIG_ENV: production
        ONE_CLIENT_ROOT_MODULE_NAME: chelsea-root
        ONE_CLIENT_REPORTING_URL: "${{ secrets.APP_URL }}/_"
        ONE_CLIENT_CDN_URL: "${{ secrets.APP_URL }}/_/static/"
        HOLOCRON_MODULE_MAP_URL: "${{ secrets.CDN_URL }}/module-map.json"
      with:
        # TODO: skip rebuild if sha is already tagged
        repository: michaeltobia/one-app
        path: packages/one-app
        dockerfile: packages/one-app/Dockerfile
        build_args: join(["NODE_ENV","ONE_CONFIG_ENV","ONE_CLIENT_ROOT_MODULE_NAME","ONE_CLIENT_REPORTING_URL","ONE_CLIENT_CDN_URL","HOLOCRON_MODULE_MAP_URL"], ',')
        target: production
        tags: latest
        tag_with_ref: true
        tag_with_sha: true
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    # TODO: trigger job to deploy