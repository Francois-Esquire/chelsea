name: Publish

on:
  repository_dispatch:
    types: [publish_docker_images]

jobs:
  publish_docker_images:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Checkout Submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: install Packages
      env:
        NODE_ENV: development
      run: |
        yarn submodule-sync
        yarn install --prefix packages/api
    - name: Build Packages
      env:
        NODE_ENV: production
      run: |
        yarn build --prefix packages/api
    - name: Publish GraphQL API to Registry
      uses: docker/build-push-action@v1
      # env:
      #   EQUAL: $([[ "$(git ls-tree HEAD~1 packages/api)" == "$(git ls-tree HEAD packages/api)" ]] && true || false)
      #   # compare for change, only build if different
      # if: env.EQUAL != true
      with:
        repository: ${{ secrets.DOCKER_IMAGE_GRAPHQL_API }}
        path: packages/api
        dockerfile: packages/api/Dockerfile
        build_args: NODE_ENV=production
        tags: latest
        tag_with_ref: true
        tag_with_sha: true
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish One App to Registry
      uses: docker/build-push-action@v1
      env:
        APP_URL: ${{ secrets.APP_URL }}
        CDN_URL: ${{ secrets.CDN_URL }}
        REVISION: $(echo `(git submodule | grep one-app)` | cut -d ' ' -f1)
      #   EQUAL: $([[ "$(git ls-tree HEAD~1 packages/one-app)" == "$(git ls-tree HEAD packages/one-app)" ]] && true || false)
      #   # compare for change, only build if different
      # if: env.EQUAL != true
      with:
        repository: ${{ secrets.DOCKER_IMAGE_ONE_APP }}
        path: packages/one-app
        dockerfile: packages/one-app/Dockerfile
        target: production
        labels: GIT_COMMIT=$REVISION
        build_args: NODE_ENV=production,ONE_CONFIG_ENV=production,ONE_CLIENT_ROOT_MODULE_NAME=chelsea-root,ONE_CLIENT_REPORTING_URL=$APP_URL/_,ONE_CLIENT_CDN_URL=$APP_URL/_/static/,HOLOCRON_MODULE_MAP_URL=$CDN_URL/module-map.json
        tags: latest
        tag_with_sha: true
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Trigger Deployment
      uses: octokit/request-action@v2.x
      id: dispatch_deployment
      with:
        route: POST /repos/:repository/dispatches
        repository: ${{ github.repository }}
        mediaType: '{"previews": ["everest"]}'
        event_type: "deploy_apps"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}